// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Produto {
  id          Int          @id @default(autoincrement())
  nome        String
  preco       Int
  categoriaId Int
  categoria   Categoria    @relation(fields: [categoriaId], references: [id])
  pedidoItems PedidoItem[]
}

model Categoria {
  id       Int       @id @default(autoincrement())
  nome     String    @unique
  produtos Produto[]
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  password String
  name     String
  role     String   @default("user")
  pedidos  Pedido[]
}

model Pedido {
  id         Int          @id @default(autoincrement())
  userId     Int
  user       User         @relation(fields: [userId], references: [id])
  itens      PedidoItem[]
  status     String       @default("PENDENTE")
  createdAt  DateTime     @default(now())
  precoTotal Int
  pagamento  Pagamento?
}

model PedidoItem {
  id         Int     @id @default(autoincrement())
  pedidoId   Int
  pedido     Pedido  @relation(fields: [pedidoId], references: [id])
  produtoId  Int
  produto    Produto @relation(fields: [produtoId], references: [id])
  quantidade Int
}

model Pagamento {
  id            Int             @id @default(autoincrement())
  pedido        Pedido          @relation(fields: [pedidoId], references: [id])
  pedidoId      Int             @unique
  metodo        MetodoPagamento
  createdAt     DateTime        @default(now())
  transacaoId   String?         @unique
  qrCode        String?
  linkPagamento String?
}

enum MetodoPagamento {
  PIX
  CARTAO
  BOLETO
}

enum PagamentoStatus {
  AGUARDANDO
  PAGO
  FALHOU
  EXPIRADO
}
